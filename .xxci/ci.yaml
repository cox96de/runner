jobs:
  compile_test:
    name: "Compile"
    runs-on:
      container-image: "registry.houzhiqiang.cn/golang:1.23"
    steps:
      - name: "build"
        run:
          - go env -w GOPROXY=https://goproxy.cn,direct
          - "go build ./..."
      - name: "test"
        run:
          - go env -w GOPROXY=https://goproxy.cn,direct
          - "go test -race -coverprofile cover.out -coverpkg=./... ./..."
  vm:
    name: "Test in VM"
    runs-on:
      image: "debian11"
    steps:
      - name: "build"
        run:
          - export PATH=$PATH:/usr/local/go/bin
          - go env -w GOPROXY=https://goproxy.cn,direct
          - "go build ./..."
      - name: "test"
        run:
          - export PATH=$PATH:/usr/local/go/bin
          - go env -w GOPROXY=https://goproxy.cn,direct
          - "go test -race -coverprofile cover.out -coverpkg=./... ./..."
  windows_vm:
    name: "Test in VM"
    runs-on:
      image: "winserver2019"
    steps:
      - name: "build"
        run:
          - $env:GOPROXY = "https://goproxy.cn"
          - $env:CGO_ENABLED = "1"
          - go build ./cmd/agent
          - go build ./cmd/executor
          - $packages = go list ./... | Where-Object { $_ -notmatch "/kube|/zombies|/runtime" }
          - go test -race -coverprofile cover.out  $packages