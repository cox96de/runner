syntax = "proto3";
import "entity.proto";
import "tools/protopatch/patch/go.proto";
option go_package = "github.com/cox96de/runner/api";

service Server {
  rpc CreatePipeline(CreatePipelineRequest) returns (CreatePipelineResponse) {}
  rpc RequestJob(RequestJobRequest) returns (RequestJobResponse) {}
  rpc ListJobExecutions(ListJobExecutionsRequest) returns (ListJobExecutionsResponse) {}
  rpc UpdateJobExecution(UpdateJobExecutionRequest) returns (UpdateJobExecutionResponse) {}
  rpc UpdateStepExecution(UpdateStepExecutionRequest) returns (UpdateStepExecutionResponse) {}
  rpc UploadLogLines(UpdateLogLinesRequest) returns (UpdateLogLinesResponse) {}
  rpc GetLogLines(GetLogLinesRequest) returns (GetLogLinesResponse) {}
}

message CreatePipelineRequest {
  PipelineDSL pipeline = 1;
}

message CreatePipelineResponse {
  Pipeline pipeline = 1;
}

message RequestJobRequest {
}

message RequestJobResponse {
  Job job = 1;
}

message UpdateJobExecutionRequest {
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 1[(go.field).name = 'JobExecutionID'];
  //@gotags: path:"job_id"
  int64 JobID = 2[(go.field).name = "JobID"];
  optional Status status = 3;
}

message UpdateJobExecutionResponse {
  JobExecution job = 1;
}

message ListJobExecutionsRequest {
  //@gotags: path:"job_id"
  int64 JobID = 1[(go.field).name = "JobID"];
}

message ListJobExecutionsResponse {
  repeated JobExecution jobs = 1;
}

message UpdateStepExecutionRequest{
  // (JobID + JobExecutionID + StepExecutionID) or (JobID + StepID + StepExecutionID) must be set
  //@gotags: path:"step_execution_id"
  int64 StepExecutionID = 1;
  //@gotags: path:"step_id"
  int64 StepID = 2;
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 3;
  //@gotags: path:"job_id"
  int64 JobID = 4;
  optional Status status = 5;
  optional uint32 exit_code = 6;
}

message UpdateStepExecutionResponse{
  StepExecution step = 1;
}

message UpdateLogLinesRequest {
  //@gotags: path:"job_id"
  int64 JobID = 1[(go.field).name = "JobID"];
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 2[(go.field).name = "JobExecutionID"];
  string Name = 3;
  repeated LogLine lines = 4;
}

message UpdateLogLinesResponse {
}

message GetLogLinesRequest {
  //@gotags: path:"job_id"
  int64 JobID = 1[(go.field).name = "JobID"];
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 2[(go.field).name = "JobExecutionID"];
  //@gotags: path:"name"
  string Name = 3;
  //@gotags: query:"offset"
  int64 Offset = 4;
  //@gotags: query:"limit"
  optional int64 Limit = 5;
}

message GetLogLinesResponse {
  repeated LogLine lines = 1;
}