syntax = "proto3";

import "entity.proto";
import "tools/protopatch/patch/go.proto";

option go_package = "github.com/cox96de/runner/api";

service Server {
  rpc Ping(ServerPingRequest) returns (ServerPingResponse) {}
  rpc CreatePipeline(CreatePipelineRequest) returns (CreatePipelineResponse) {}
  rpc RequestJob(RequestJobRequest) returns (RequestJobResponse) {}
  rpc GetJobExecution(GetJobExecutionRequest) returns (GetJobExecutionResponse) {}
  rpc CancelJobExecution(CancelJobExecutionRequest) returns (CancelJobExecutionResponse) {}
  rpc ListJobExecutions(ListJobExecutionsRequest) returns (ListJobExecutionsResponse) {}
  rpc UpdateJobExecution(UpdateJobExecutionRequest) returns (UpdateJobExecutionResponse) {}
  rpc GetStepExecution(GetStepExecutionRequest) returns (GetStepExecutionResponse) {}
  rpc UpdateStepExecution(UpdateStepExecutionRequest) returns (UpdateStepExecutionResponse) {}
  rpc UploadLogLines(UpdateLogLinesRequest) returns (UpdateLogLinesResponse) {}
  rpc GetLogLines(GetLogLinesRequest) returns (GetLogLinesResponse) {}
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse) {}
}

message ServerPingRequest {}
message ServerPingResponse {}

message CreatePipelineRequest {
  PipelineDSL pipeline = 1;
}

message CreatePipelineResponse {
  Pipeline pipeline = 1;
}

message RequestJobRequest {
  string label = 1;
}

message RequestJobResponse {
  Job job = 1;
}

message UpdateJobExecutionRequest {
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 1 [(go.field).name = 'JobExecutionID'];
  optional Status status = 3;
  optional Reason reason = 4;
}

message UpdateJobExecutionResponse {
  JobExecution JobExecution = 1;
}

message GetJobExecutionRequest {
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 1 [(go.field).name = "JobExecutionID"];
}

message GetJobExecutionResponse {
  JobExecution JobExecution = 1;
}

message CancelJobExecutionRequest {
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 1 [(go.field).name = "JobExecutionID"];
}

message CancelJobExecutionResponse {
  JobExecution JobExecution = 1;
}

message ListJobExecutionsRequest {
  //@gotags: path:"job_id"
  int64 JobID = 1 [(go.field).name = "JobID"];
}

message ListJobExecutionsResponse {
  repeated JobExecution jobs = 1;
}

message GetStepExecutionRequest {
  //@gotags: path:"step_execution_id"
  int64 StepExecutionID = 1;
}

message GetStepExecutionResponse {
  StepExecution StepExecution = 1;
}
message UpdateStepExecutionRequest {
  //@gotags: path:"step_execution_id"
  int64 StepExecutionID = 1;
  optional Status status = 2;
  optional uint32 exit_code = 3;
}

message UpdateStepExecutionResponse {
  StepExecution StepExecution = 1;
}

message UpdateLogLinesRequest {
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 1 [(go.field).name = "JobExecutionID"];
  string Name = 2;
  repeated LogLine lines = 3;
}

message UpdateLogLinesResponse {}

message GetLogLinesRequest {
  //@gotags: path:"job_execution_id"
  int64 JobExecutionID = 1 [(go.field).name = "JobExecutionID"];
  //@gotags: path:"name"
  string Name = 2;
  //@gotags: query:"offset"
  int64 Offset = 3;
  //@gotags: query:"limit"
  optional int64 Limit = 4;
}

message GetLogLinesResponse {
  repeated LogLine lines = 1;
}

message HeartbeatRequest {
  int64 JobExecutionID = 1 [(go.field).name = "JobExecutionID"];
}

message HeartbeatResponse {
  Status status = 1;
}
