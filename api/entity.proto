syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "tools/protopatch/patch/go.proto";

option go_package = "github.com/cox96de/runner/api";

// PipelineDSL represents a pipeline definition.
// It only used to create a pipeline.
message PipelineDSL {
  //@gotags: validate:"required,min=1,max=16,dive"
  repeated JobDSL jobs = 1;
}

message Pipeline {
  int64 id = 1 [(go.field).name = "ID"];
  repeated Job jobs = 2;
  repeated PipelineExecution executions = 3;
  PipelineExecution execution = 4;
  google.protobuf.Timestamp created_at = 101;
  google.protobuf.Timestamp updated_at = 102;
}

message PipelineExecution {
  int64 id = 1;
  Status status = 2;
  repeated JobExecution jobs = 3;
}

// JobDSL represents a job definition.
// It only used to create a job.
message JobDSL {
  //@gotags: validate:"required"
  string name = 3;
  //@gotags: validate:"required"
  RunsOn runs_on = 4;
  string working_directory = 5;
  map<string, string> env_var = 6;
  repeated string depends_on = 7;
  //@gotags: validate:"required,min=1,max=32,dive"
  repeated StepDSL steps = 8;
  // Timeout in seconds
  int32 Timeout = 9;
}

message Job {
  int64 id = 1 [(go.field).name = "ID"];
  int64 pipeline_id = 2 [(go.field).name = "PipelineID"];
  string name = 3;
  RunsOn runs_on = 4;
  string working_directory = 5;
  map<string, string> env_var = 6;
  repeated string depends_on = 7;
  repeated Step steps = 8;
  repeated JobExecution executions = 9;
  JobExecution execution = 10;
  int32 timeout = 11;
  google.protobuf.Timestamp created_at = 101;
  google.protobuf.Timestamp updated_at = 102;
}

// Status represents the status of a step.
enum Status {
  option (go.enum).name = "Status";
  STATUS_UNKNOWN = 0 [(go.value).name = "UnknownStatus"];
  STATUS_CREATED = 1 [(go.value).name = "StatusCreated"];
  STATUS_QUEUED = 2 [(go.value).name = "StatusQueued"];
  STATUS_PREPARING = 24 [(go.value).name = "StatusPreparing"];
  STATUS_RUNNING = 25 [(go.value).name = "StatusRunning"];
  STATUS_CANCELING = 26 [(go.value).name = "StatusCanceling"];
  STATUS_FAILED = 50 [(go.value).name = "StatusFailed"];
  STATUS_SKIPPED = 51 [(go.value).name = "StatusSkipped"];
  STATUS_SUCCEEDED = 52 [(go.value).name = "StatusSucceeded"];
}

message JobExecution {
  int64 id = 1 [(go.field).name = "ID"];
  int64 job_id = 2 [(go.field).name = "JobID"];
  Status status = 3;
  repeated StepExecution steps = 4;
  google.protobuf.Timestamp started_at = 5;
  google.protobuf.Timestamp completed_at = 6;
  Reason reason = 7;
  google.protobuf.Timestamp created_at = 101;
  google.protobuf.Timestamp updated_at = 102;
}

enum ReasonType {
  option (go.enum).name = "FailedReason";
  FAILED_REASON_INTERNAL_ERROR = 0 [(go.value).name = "FailedReasonInternalError"];
  FAILED_REASON_TIMEOUT = 1 [(go.value).name = "FailedReasonTimeout"];
  FAILED_REASON_CANCELLED = 2 [(go.value).name = "FailedReasonCancelled"];
  FAILED_REASON_STEP_FAILED = 3 [(go.value).name = "FailedReasonStepFailed"];
  FAILED_REASON_HEARTBEAT_TIMEOUT = 4 [(go.value).name = "FailedReasonHeartbeatTimeout"];
}

message Reason {
  ReasonType reason = 1;
  string message = 2;
}

message RunsOn {
  //@gotags: validate:"required"
  string label = 1;
  Docker docker = 2;
}

message Docker {
  repeated Container containers = 1;
  repeated Volume volumes = 2;
  string default_container = 3;
}

message Container {
  string name = 1;
  string image = 2;
  repeated VolumeMount volume_mounts = 3;
}

message Volume {
  string name = 1;
  HostPathVolumeSource host_path = 2;
  EmptyDirVolumeSource empty_dir = 3;
}

message HostPathVolumeSource {
  string path = 1;
}

message EmptyDirVolumeSource {
  // No fields defined
}

message VolumeMount {
  string name = 1;
  bool read_only = 2;
  string mount_path = 3;
}

// StepDSL represents a step definition.
// It only used to create a step.
message StepDSL {
  //@gotags: validate:"required"
  string name = 4;
  string working_directory = 5;
  string user = 6;
  string container = 7;
  repeated string depends_on = 8;
  //@gotags: validate:"required,min=1,max=32,dive"
  repeated string commands = 9;
  map<string, string> env_var = 10;
  string if = 11;
}

message Step {
  int64 id = 1 [(go.field).name = "ID"];
  int64 pipeline_id = 2 [(go.field).name = "PipelineID"];
  int64 job_id = 3 [(go.field).name = "JobID"];
  string name = 4;
  string working_directory = 5;
  string user = 6;
  string container = 7;
  repeated string depends_on = 8;
  repeated string commands = 9;
  map<string, string> env_var = 10;
  repeated StepExecution executions = 11;
  StepExecution execution = 12;
  google.protobuf.Timestamp created_at = 101;
  google.protobuf.Timestamp updated_at = 102;
}

message StepExecution {
  int64 id = 1 [(go.field).name = "ID"];
  int64 job_execution_id = 2 [(go.field).name = "JobExecutionID"];
  int64 step_id = 3 [(go.field).name = "StepID"];
  Status status = 4;
  uint32 exit_code = 5;
  google.protobuf.Timestamp started_at = 6;
  google.protobuf.Timestamp completed_at = 7;
  google.protobuf.Timestamp created_at = 101;
  google.protobuf.Timestamp updated_at = 102;
}

message LogLine {
  int64 Timestamp = 1;
  int64 Number = 2;
  string Output = 3;
}

message Event {
  string object_kind = 1;
  optional StepExecution step_execution = 2;
  optional JobExecution job_execution = 3;
  optional PipelineExecution pipeline_execution = 4;
}
