# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.53.3

      - name: Format
        run: make format

      # It's broken
      #      - name: Lint
      #        run: make lint

      - name: Check
        run: git diff --exit-code
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: go build ./...

      - name: Prepare
        run: |
          echo "prepare"
          sudo apt-get update && sudo apt-get install -y genisoimage
      # https://minikube.sigs.k8s.io/docs/tutorials/setup_minikube_in_github_actions/
      - name: Start minikube
        uses: medyagh/setup-minikube@master
      - name: Test
        run: go test -race -coverprofile cover.out -coverpkg=./... ./...
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
  build_macos:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: go build ./cmd/...

      - name: Test
        run: go test -race -coverprofile cover.out -coverpkg=./... $(go list ./... | grep -v /runtime)
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22"
      - uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: make build
      - name: Test
        run: |
          $packages = go list ./... | Where-Object { $_ -notmatch "/kube|/zombies|/runtime" }
          go test -race -coverprofile cover.out  $packages

#  integration:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.19
#
#      # https://minikube.sigs.k8s.io/docs/tutorials/setup_minikube_in_github_actions/
#      - name: Start minikube
#        uses: medyagh/setup-minikube@master
#
#      - name: Try the cluster
#        run: kubectl get pods -A
#
#      - name: Test Kube
#        run: go test -tags kube_integration -race -coverprofile cover.out -coverpkg=./... ./engine/kube/...
#
#      - name: Test VM Runtime
#        run: |
#          sudo apt-get update && sudo apt-get install -y genisoimage
#          cd ./engine/vm/runtime/
#          wget -q -O debian-11-amd64.qcow2 'https://cloud.debian.org/images/cloud/bullseye/20230802-1460/debian-11-genericcloud-amd64-20230802-1460.qcow2'
#          go test -tags vm_runtime_integration ./...
#
#      - name: Example
#        run: |
#          cd example/cmd/runner
#          python run.py